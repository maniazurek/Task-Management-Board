{"ast":null,"code":"var _jsxFileName = \"/Users/Mania/Desktop/Task Management Board Project/src/components/Main.js\";\nimport React from \"react\";\nimport addImage from \"../assets/add.png\";\nimport ToDoSection from \"./ToDoSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  let {\n    addTaskOpen,\n    openMobileNav,\n    tasksList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openMobileNav,\n      className: \"hamburger-open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoSection, {\n      columnName: \"to do\",\n      tasksList: tasksList,\n      onTaskSelect: handleTaskSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoSection, {\n      columnName: \"in progress\",\n      tasksList: tasksList,\n      onTaskSelect: handleTaskSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoSection, {\n      columnName: \"done\",\n      tasksList: tasksList,\n      onTaskSelect: handleTaskSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTaskOpen,\n      className: \"main-content__add-task\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"main-content__add-icon\",\n        src: addImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","addImage","ToDoSection","Main","addTaskOpen","openMobileNav","tasksList","handleTaskSelect"],"sources":["/Users/Mania/Desktop/Task Management Board Project/src/components/Main.js"],"sourcesContent":["import React from \"react\";\n\nimport addImage from \"../assets/add.png\";\nimport ToDoSection from \"./ToDoSection\";\n\nconst Main = ({ addTaskOpen, openMobileNav, tasksList }) => {\n  return (\n    <div className=\"main-content\">\n      <button onClick={openMobileNav} className=\"hamburger-open\"></button>\n      <ToDoSection\n        columnName=\"to do\"\n        tasksList={tasksList}\n        onTaskSelect={handleTaskSelect}\n      />\n      <ToDoSection\n        columnName=\"in progress\"\n        tasksList={tasksList}\n        onTaskSelect={handleTaskSelect}\n      />\n      <ToDoSection columnName=\"done\" tasksList={tasksList}           onTaskSelect={handleTaskSelect}\n/>\n      <button onClick={addTaskOpen} className=\"main-content__add-task\">\n        <img className=\"main-content__add-icon\" src={addImage} />\n      </button>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,IAAI,GAAG,QAA+C;EAAA,IAA9C;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAU,CAAC;EACrD,oBACE;IAAK,SAAS,EAAC,cAAc;IAAA,wBAC3B;MAAQ,OAAO,EAAED,aAAc;MAAC,SAAS,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAU,eACpE,QAAC,WAAW;MACV,UAAU,EAAC,OAAO;MAClB,SAAS,EAAEC,SAAU;MACrB,YAAY,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF,QAAC,WAAW;MACV,UAAU,EAAC,aAAa;MACxB,SAAS,EAAED,SAAU;MACrB,YAAY,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF,QAAC,WAAW;MAAC,UAAU,EAAC,MAAM;MAAC,SAAS,EAAED,SAAU;MAAW,YAAY,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAClG,eACI;MAAQ,OAAO,EAAEH,WAAY;MAAC,SAAS,EAAC,wBAAwB;MAAA,uBAC9D;QAAK,SAAS,EAAC,wBAAwB;QAAC,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAClD;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,KArBIE,IAAI;AAuBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}