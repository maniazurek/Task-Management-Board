{"ast":null,"code":"var _jsxFileName = \"/Users/Mania/Desktop/Task Management Board Project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport FormTask from \"./components/FormTask\";\nimport SimpleTask from \"./components/SimpleTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasksList, setTasksList] = useState([]);\n  const [isAddTaskOpen, setIsAddTaskOpen] = useState(false);\n  const handleAddTaskOpen = () => {\n    setIsAddTaskOpen(true);\n  };\n  const handleFormSubmit = (event, title, date, assignee, description, link, tags, columns, comments) => {\n    event.preventDefault();\n    const newTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments\n    };\n    setTasksList([...tasksList, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormTask, {\n        handleFormSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isAddTaskOpen]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), tasksList.map(task => {\n      return /*#__PURE__*/_jsxDEV(SimpleTask, {\n        title: task.title,\n        description: task.description,\n        link: task.link,\n        tags: task.tags,\n        date: task.date,\n        assignee: task.assignee,\n        columns: task.columns,\n        comments: task.comments\n      }, uniqid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(App, \"xtLHD/UPcC67htEojJOylenTSaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","uniqid","Main","Navigation","FormTask","SimpleTask","App","tasksList","setTasksList","isAddTaskOpen","setIsAddTaskOpen","handleAddTaskOpen","handleFormSubmit","event","title","date","assignee","description","link","tags","columns","comments","preventDefault","newTask","map","task"],"sources":["/Users/Mania/Desktop/Task Management Board Project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\n\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport FormTask from \"./components/FormTask\";\nimport SimpleTask from \"./components/SimpleTask\";\n\nconst App = () => {\n  const [tasksList, setTasksList] = useState([]);\n\n  const [isAddTaskOpen, setIsAddTaskOpen] = useState(false);\n\n  const handleAddTaskOpen = () => {\n    setIsAddTaskOpen(true);\n  };\n\n  const handleFormSubmit = (\n    event,\n    title,\n    date,\n    assignee,\n    description,\n    link,\n    tags,\n    columns,\n    comments\n  ) => {\n    event.preventDefault();\n    const newTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments,\n    };\n    setTasksList([...tasksList, newTask]);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <Navigation />\n        <FormTask handleFormSubmit={handleFormSubmit} />\n        {isAddTaskOpen }\n      </div>\n      {tasksList.map((task) => {\n        return (\n          <SimpleTask\n            key={uniqid()}\n            title={task.title}\n            description={task.description}\n            link={task.link}\n            tags={task.tags}\n            date={task.date}\n            assignee={task.assignee}\n            columns={task.columns}\n            comments={task.comments}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAAA;AAEjD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMW,iBAAiB,GAAG,MAAM;IAC9BD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAME,gBAAgB,GAAG,CACvBC,KAAK,EACLC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,WAAW,EACXC,IAAI,EACJC,IAAI,EACJC,OAAO,EACPC,QAAQ,KACL;IACHR,KAAK,CAACS,cAAc,EAAE;IACtB,MAAMC,OAAO,GAAG;MACdT,KAAK;MACLC,IAAI;MACJC,QAAQ;MACRC,WAAW;MACXC,IAAI;MACJC,IAAI;MACJC,OAAO;MACPC;IACF,CAAC;IACDb,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEgB,OAAO,CAAC,CAAC;EACvC,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd,QAAC,QAAQ;QAAC,gBAAgB,EAAEX;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CH,aAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QACV,EACLF,SAAS,CAACiB,GAAG,CAAEC,IAAI,IAAK;MACvB,oBACE,QAAC,UAAU;QAET,KAAK,EAAEA,IAAI,CAACX,KAAM;QAClB,WAAW,EAAEW,IAAI,CAACR,WAAY;QAC9B,IAAI,EAAEQ,IAAI,CAACP,IAAK;QAChB,IAAI,EAAEO,IAAI,CAACN,IAAK;QAChB,IAAI,EAAEM,IAAI,CAACV,IAAK;QAChB,QAAQ,EAAEU,IAAI,CAACT,QAAS;QACxB,OAAO,EAAES,IAAI,CAACL,OAAQ;QACtB,QAAQ,EAAEK,IAAI,CAACJ;MAAS,GARnBpB,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QASb;IAEN,CAAC,CAAC;EAAA,gBACD;AAEP,CAAC;AAAC,GA1DIK,GAAG;AAAA,KAAHA,GAAG;AA4DT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}