{"ast":null,"code":"var _jsxFileName = \"/Users/Mania/Desktop/Task Management Board Project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport FormTask from \"./components/FormTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasksList, setTasksList] = useState([]);\n  const [isAddTaskOpen, setIsAddTaskOpen] = useState(false);\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleAddTaskOpen = () => {\n    setIsAddTaskOpen(true);\n  };\n  const handleCancelAddTaskOpen = () => {\n    setIsAddTaskOpen(false);\n  };\n  const handleIsMobileNavOpen = () => {\n    setIsMobileNavOpen(true);\n  };\n  const handleMobileNavClose = () => {\n    setIsMobileNavOpen(false);\n  };\n  const handleFormSubmit = (event, title, date, assignee, description, link, tags, columns, comments) => {\n    event.preventDefault();\n    const newTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments\n    };\n    setTasksList([...tasksList, newTask]);\n    handleCancelAddTaskOpen();\n  };\n  const handleTaskSelect = clickedTask => {\n    setMode(\"edit\");\n    setSelectedTask(clickedTask);\n    setIsAddTaskOpen(true);\n  };\n  console.log(mode, selectedTask, isAddTaskOpen);\n  const handleTaskAdd = () => {\n    setMode(\"add\");\n    setSelectedTask(null);\n    setIsAddTaskOpen(true);\n  };\n  const handleTaskEdit = (event, title, date, assignee, description, link, tags, columns, comments) => {\n    event.preventDefault();\n    const editedTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments\n    };\n    const editedTaskList = () => {\n      setTasksList(tasksList.map(taskPost => {\n        if (taskPost.title === editedTask.title) {\n          return editedTask;\n        } else {\n          return taskPost;\n        }\n      }));\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isMobileNavOpen: isMobileNavOpen,\n        handleMobileNavClose: handleMobileNavClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), isAddTaskOpen && /*#__PURE__*/_jsxDEV(FormTask, {\n        mode: mode,\n        handleFormSubmit: mode === \"add\" ? handleFormSubmit : handleTaskEdit,\n        CancelAddTaskOpen: handleCancelAddTaskOpen,\n        taskToEdit: selectedTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        addTaskOpen: handleTaskAdd,\n        openMobileNav: handleIsMobileNavOpen,\n        tasksList: tasksList,\n        onTaskSelect: handleTaskSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"g8XpuRVYMMLLWWPagt4+Iftlfv8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Main","Navigation","FormTask","App","tasksList","setTasksList","isAddTaskOpen","setIsAddTaskOpen","isMobileNavOpen","setIsMobileNavOpen","mode","setMode","selectedTask","setSelectedTask","handleAddTaskOpen","handleCancelAddTaskOpen","handleIsMobileNavOpen","handleMobileNavClose","handleFormSubmit","event","title","date","assignee","description","link","tags","columns","comments","preventDefault","newTask","handleTaskSelect","clickedTask","console","log","handleTaskAdd","handleTaskEdit","editedTask","editedTaskList","map","taskPost"],"sources":["/Users/Mania/Desktop/Task Management Board Project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Main from \"./components/Main\";\nimport Navigation from \"./components/Navigation\";\nimport FormTask from \"./components/FormTask\";\n\nconst App = () => {\n  const [tasksList, setTasksList] = useState([]);\n  const [isAddTaskOpen, setIsAddTaskOpen] = useState(false);\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  const handleAddTaskOpen = () => {\n    setIsAddTaskOpen(true);\n  };\n\n  const handleCancelAddTaskOpen = () => {\n    setIsAddTaskOpen(false);\n  };\n\n  const handleIsMobileNavOpen = () => {\n    setIsMobileNavOpen(true);\n  };\n\n  const handleMobileNavClose = () => {\n    setIsMobileNavOpen(false);\n  };\n\n  const handleFormSubmit = (\n    event,\n    title,\n    date,\n    assignee,\n    description,\n    link,\n    tags,\n    columns,\n    comments\n  ) => {\n    event.preventDefault();\n    const newTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments,\n    };\n    setTasksList([...tasksList, newTask]);\n    handleCancelAddTaskOpen();\n  };\n\n  const handleTaskSelect = (clickedTask) => {\n    setMode(\"edit\");\n    setSelectedTask(clickedTask);\n    setIsAddTaskOpen(true);\n  };\n\n  console.log(mode, selectedTask, isAddTaskOpen);\n\n  const handleTaskAdd = () => {\n    setMode(\"add\");\n    setSelectedTask(null);\n    setIsAddTaskOpen(true);\n  };\n\n  const handleTaskEdit = (\n    event,\n    title,\n    date,\n    assignee,\n    description,\n    link,\n    tags,\n    columns,\n    comments\n  ) => {\n    event.preventDefault();\n    const editedTask = {\n      title,\n      date,\n      assignee,\n      description,\n      link,\n      tags,\n      columns,\n      comments,\n    };\n\n    const editedTaskList = () => {\n      setTasksList(\n        tasksList.map((taskPost) => {\n          if (taskPost.title === editedTask.title) {\n            return editedTask;\n          } else {\n            return taskPost;\n          }\n        })\n      );\n    };\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <Navigation\n          isMobileNavOpen={isMobileNavOpen}\n          handleMobileNavClose={handleMobileNavClose}\n        />\n        {isAddTaskOpen && (\n          <FormTask\n            mode={mode}\n            handleFormSubmit={\n              mode === \"add\" ? handleFormSubmit : handleTaskEdit\n            }\n            CancelAddTaskOpen={handleCancelAddTaskOpen}\n            taskToEdit={selectedTask}\n          />\n        )}\n        <Main\n          addTaskOpen={handleTaskAdd}\n          openMobileNav={handleIsMobileNavOpen}\n          tasksList={tasksList}\n          onTaskSelect={handleTaskSelect}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}